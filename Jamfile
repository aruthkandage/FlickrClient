TOP = . ;
BINDIR = bin ;
OBJDIR = obj ;

INCDIRS = 
include
/usr/include
/usr/include/libxml2 
;

SRCDIRS =
src
;

LIBDIRS = 
lib
/usr/lib 
;

CC = gcc ;
C++ = g++ ;
LINK = g++ ;

LINKLIBDIRS = -L$(LIBDIRS) ;

rule set_libs {
    LINKLIBS on $(1) = -l$(2) ;
}

rule compile {
    local _obj ;

    _obj = $(1:S=.o) ;

	Depends $(_obj) : $(1) ;
	Object $(_obj) : $(1) ;

    SEARCH on $(1) = $(SRCDIRS) ;
    CCHDRS on $(_obj) = [ FIncludes $(INCDIRS) ] ;

    if $(DEBUG) {
        C++FLAGS on $(_obj) += -g ;
    } else {
        CCDEFS on $(_obj) += [ FDefines NDEBUG ] ;
    }

	MakeLocate $(_obj) : $(OBJDIR) ;
}

rule compile_sources {
	local _src ;

	for _src in $(1)
	{
		compile $(_src) ;
	}	
}

rule executable {
	Depends $(1) : $(2:S=.o) ;
	Clean clean : $(1) ; 
	LOCATE on $(1) = $(BINDIR) ;
	compile_sources $(2) ;
	link_executable $(1) : $(2:S=.o) ;
}

actions link_executable {
	$(LINK) -o $(1:D=$(LOCATE)) $(2:D=$(OBJDIR)) $(LINKLIBDIRS) $(LINKLIBS) ;
}

executable boost-asio-1 : boost-asio-1.cpp ;
set_libs boost-asio-1 : boost_system boost_thread dl pthread xml2 ;

executable base64_test : base64.cpp base64_test.cpp ;
